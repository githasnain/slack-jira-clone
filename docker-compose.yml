version: '3.8'

# Azure Production Docker Compose
# Slack-Jira Clone Project Management System
# Optimized for Azure Container Instances

services:
  # Main Application - Production Ready
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: slack-jira-app
    environment:
      # Core Application Settings
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      
      # Database (Azure Database for PostgreSQL)
      - DATABASE_URL=${DATABASE_URL}
      
      # Authentication
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      
      # Cache (Azure Cache for Redis)
      - REDIS_URL=${REDIS_URL}
      
      # Application URLs
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      
      # Azure Integration
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      
      # File Upload Configuration
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES:-image/jpeg,image/png,image/gif,application/pdf,text/plain}
      
      # Monitoring & Logging
      - SENTRY_DSN=${SENTRY_DSN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
    ports:
      - "3000:3000"
    
    # Azure Container Instances Resource Limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    
    # Health Check for Azure Monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Restart Policy
    restart: unless-stopped
    
    # Logging Configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Networks
networks:
  default:
    driver: bridge
